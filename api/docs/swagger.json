{
    "swagger": "2.0",
    "info": {
        "description": "Betayin Kino",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/admin/add": {
            "post": {
                "description": "Adds a new admin with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Add a new admin",
                "parameters": [
                    {
                        "description": "Admin Add Request",
                        "name": "createAdminReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userservice.CreateAdminReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/userservice.CreateAdminRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/all": {
            "get": {
                "description": "Retrieves a list of all admins with optional filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get all admins",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit the number of results",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of admins",
                        "schema": {
                            "$ref": "#/definitions/userservice.GetAllAdminRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/delete": {
            "delete": {
                "description": "Deletes an admin by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Delete an admin",
                "parameters": [
                    {
                        "description": "Admin Delete Request",
                        "name": "deleteAdminReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userservice.DeleteAdminReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/userservice.DeleteAdminRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/forget_password": {
            "post": {
                "description": "Sends a password reset link to the admin's email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Reset admin password",
                "parameters": [
                    {
                        "description": "Password Reset Request",
                        "name": "forgetPasswordReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userservice.ForgetPasswordReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/userservice.ForgetPasswordRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/update": {
            "put": {
                "description": "Updates the details of an admin by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Update admin details",
                "parameters": [
                    {
                        "description": "Admin Update Request",
                        "name": "updateAdminReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userservice.UpdateAdminReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/userservice.UpdateAdminRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/{id}": {
            "get": {
                "description": "Retrieves details of an admin by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get admin details by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Admin ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/userservice.GetAdminRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/comment/add": {
            "post": {
                "description": "Adds a new comment with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment"
                ],
                "summary": "Add a new comment",
                "parameters": [
                    {
                        "description": "Comment Add Request",
                        "name": "createCommentReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/movieservice.CreateCommentReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/movieservice.CreateCommentRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/comment/all": {
            "get": {
                "description": "Retrieves a list of all comments with optional filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment"
                ],
                "summary": "Get all comments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by user ID",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by movie ID",
                        "name": "movie_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by rating",
                        "name": "rate",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit the number of results",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of comments",
                        "schema": {
                            "$ref": "#/definitions/movieservice.GetAllCommentsRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/comment/delete": {
            "delete": {
                "description": "Deletes a comment by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment"
                ],
                "summary": "Delete a comment",
                "parameters": [
                    {
                        "description": "Comment Delete Request",
                        "name": "deleteCommentReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/movieservice.DeleteCommentReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/movieservice.DeleteCommentRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/comment/update": {
            "put": {
                "description": "Updates the details of a comment by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment"
                ],
                "summary": "Update comment details",
                "parameters": [
                    {
                        "description": "Comment Update Request",
                        "name": "updateCommentReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/movieservice.UpdateCommentReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/movieservice.UpdateCommentRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/comment/{id}": {
            "get": {
                "description": "Retrieves details of a comment by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment"
                ],
                "summary": "Get comment details by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Comment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/movieservice.GetCommentRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/movie/add": {
            "post": {
                "description": "Adds a new movie with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movie"
                ],
                "summary": "Add a new movie",
                "parameters": [
                    {
                        "description": "Movie Add Request",
                        "name": "addMovieReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/movieservice.AddMovieReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/movieservice.AddMovieRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/movie/all": {
            "get": {
                "description": "Retrieves a list of all movies with optional filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movie"
                ],
                "summary": "Get all movies",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by movie name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by studio",
                        "name": "studio",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by genre",
                        "name": "genre",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit the number of results",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of movies",
                        "schema": {
                            "$ref": "#/definitions/movieservice.GetAllMoviesRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/movie/delete": {
            "delete": {
                "description": "Deletes a movie by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movie"
                ],
                "summary": "Delete a movie",
                "parameters": [
                    {
                        "description": "Movie Delete Request",
                        "name": "deleteMovieReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/movieservice.DeleteMovieReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/movieservice.DeleteMovieRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/movie/update": {
            "put": {
                "description": "Updates the details of a movie by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movie"
                ],
                "summary": "Update movie details",
                "parameters": [
                    {
                        "description": "Movie Update Request",
                        "name": "updateMovieReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/movieservice.UpdateMovieReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/movieservice.UpdateMovieRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/movie/{id}": {
            "get": {
                "description": "Retrieves details of a movie by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movie"
                ],
                "summary": "Get movie details by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Movie ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/movieservice.GetMovieByIdRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/all": {
            "get": {
                "description": "Retrieves a list of all users with optional filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get all users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit the number of results",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of users",
                        "schema": {
                            "$ref": "#/definitions/userservice.GetAllUserRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/delete": {
            "delete": {
                "description": "Deletes a user by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Delete a user",
                "parameters": [
                    {
                        "description": "User Delete Request",
                        "name": "deleteUserReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userservice.DeleteUserReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/userservice.DeleteUserRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/forgot_password": {
            "post": {
                "description": "Sends a forgot password email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Forgot password",
                "parameters": [
                    {
                        "description": "Forgot Password Request",
                        "name": "forgotPasswordReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userservice.ForgotPasswordReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/userservice.ForgotPasswordRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "Logins user using email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "Login Request",
                        "name": "loginReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userservice.LoginReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/userservice.LoginRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "Registers a new user with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User Register Request",
                        "name": "registerUserReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userservice.RegisterUserReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/userservice.RegisterUserRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/update": {
            "put": {
                "description": "Updates the details of a user by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update user details",
                "parameters": [
                    {
                        "description": "User Update Request",
                        "name": "updateUserReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userservice.UpdateUserReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/userservice.UpdateUserRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/verify-user": {
            "post": {
                "description": "Verifies a user using the verification code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Verify a user",
                "parameters": [
                    {
                        "description": "User Verification Request",
                        "name": "verifyUserReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userservice.VerifyUserReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/userservice.VerifyUserRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "description": "Retrieves details of a user by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get user details by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/userservice.GetUserByIDRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "movieservice.AddMovieReq": {
            "type": "object",
            "properties": {
                "age_limit": {
                    "type": "integer"
                },
                "background_image_url": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/movieservice.Genres"
                    }
                },
                "language": {
                    "type": "string"
                },
                "movie_name": {
                    "type": "string"
                },
                "movie_url": {
                    "type": "string"
                },
                "season": {
                    "type": "integer"
                },
                "studio": {
                    "type": "string"
                }
            }
        },
        "movieservice.AddMovieRes": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "movieservice.CommentModel": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "movie_id": {
                    "type": "string"
                },
                "rate": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "movieservice.CreateCommentReq": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "movie_id": {
                    "type": "string"
                },
                "rate": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "movieservice.CreateCommentRes": {
            "type": "object",
            "properties": {
                "comment": {
                    "$ref": "#/definitions/movieservice.CommentModel"
                }
            }
        },
        "movieservice.DeleteCommentReq": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "movieservice.DeleteCommentRes": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "movieservice.DeleteMovieReq": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "movieservice.DeleteMovieRes": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "movieservice.Genres": {
            "type": "object",
            "properties": {
                "genre": {
                    "type": "string"
                }
            }
        },
        "movieservice.GetAllCommentsRes": {
            "type": "object",
            "properties": {
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/movieservice.CommentModel"
                    }
                }
            }
        },
        "movieservice.GetAllMoviesRes": {
            "type": "object",
            "properties": {
                "movies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/movieservice.GetMovieByIdRes"
                    }
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "movieservice.GetCommentRes": {
            "type": "object",
            "properties": {
                "comment": {
                    "$ref": "#/definitions/movieservice.CommentModel"
                }
            }
        },
        "movieservice.GetMovieByIdRes": {
            "type": "object",
            "properties": {
                "age_limit": {
                    "type": "integer"
                },
                "background_image_url": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/movieservice.Genres"
                    }
                },
                "id": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "movie_name": {
                    "type": "string"
                },
                "movie_url": {
                    "type": "string"
                },
                "studio": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "movieservice.UpdateCommentReq": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "rate": {
                    "type": "integer"
                }
            }
        },
        "movieservice.UpdateCommentRes": {
            "type": "object",
            "properties": {
                "comment": {
                    "$ref": "#/definitions/movieservice.CommentModel"
                }
            }
        },
        "movieservice.UpdateMovieReq": {
            "type": "object",
            "properties": {
                "age_limit": {
                    "type": "integer"
                },
                "background_image_url": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/movieservice.Genres"
                    }
                },
                "id": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "movie_name": {
                    "type": "string"
                },
                "movie_url": {
                    "type": "string"
                },
                "season": {
                    "type": "integer"
                },
                "studio": {
                    "type": "string"
                }
            }
        },
        "movieservice.UpdateMovieRes": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "userservice.AdminModel": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "img_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "userservice.CreateAdminReq": {
            "type": "object",
            "properties": {
                "admin_email": {
                    "type": "string"
                },
                "admin_name": {
                    "type": "string"
                },
                "admin_password": {
                    "type": "string"
                }
            }
        },
        "userservice.CreateAdminRes": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "userservice.DeleteAdminReq": {
            "type": "object",
            "properties": {
                "admin_id": {
                    "type": "string"
                }
            }
        },
        "userservice.DeleteAdminRes": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "userservice.DeleteUserReq": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "userservice.DeleteUserRes": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "userservice.ForgetPasswordReq": {
            "type": "object",
            "properties": {
                "admin_email": {
                    "type": "string"
                }
            }
        },
        "userservice.ForgetPasswordRes": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "userservice.ForgotPasswordReq": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "userservice.ForgotPasswordRes": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "userservice.GetAdminRes": {
            "type": "object",
            "properties": {
                "admin_res": {
                    "$ref": "#/definitions/userservice.AdminModel"
                }
            }
        },
        "userservice.GetAllAdminRes": {
            "type": "object",
            "properties": {
                "admin_res": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userservice.AdminModel"
                    }
                }
            }
        },
        "userservice.GetAllUserRes": {
            "type": "object",
            "properties": {
                "UserRes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userservice.UserModel"
                    }
                }
            }
        },
        "userservice.GetUserByIDRes": {
            "type": "object",
            "properties": {
                "UserRes": {
                    "$ref": "#/definitions/userservice.UserModel"
                }
            }
        },
        "userservice.LoginReq": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "userservice.LoginRes": {
            "type": "object",
            "properties": {
                "UserRes": {
                    "$ref": "#/definitions/userservice.UserModel"
                }
            }
        },
        "userservice.RegisterUserReq": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "userservice.RegisterUserRes": {
            "type": "object",
            "properties": {
                "UserRes": {
                    "$ref": "#/definitions/userservice.UserModel"
                }
            }
        },
        "userservice.UpdateAdminReq": {
            "type": "object",
            "properties": {
                "admin_req": {
                    "$ref": "#/definitions/userservice.AdminModel"
                }
            }
        },
        "userservice.UpdateAdminRes": {
            "type": "object",
            "properties": {
                "admin_res": {
                    "$ref": "#/definitions/userservice.AdminModel"
                }
            }
        },
        "userservice.UpdateUserReq": {
            "type": "object",
            "properties": {
                "UserReq": {
                    "$ref": "#/definitions/userservice.UserModel"
                }
            }
        },
        "userservice.UpdateUserRes": {
            "type": "object",
            "properties": {
                "UserRes": {
                    "$ref": "#/definitions/userservice.UserModel"
                }
            }
        },
        "userservice.UserModel": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "img_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "userservice.VerifyUserReq": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "sms_code": {
                    "type": "string"
                }
            }
        },
        "userservice.VerifyUserRes": {
            "type": "object",
            "properties": {
                "Res": {
                    "$ref": "#/definitions/userservice.UserModel"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authourization",
            "in": "header"
        }
    }
}