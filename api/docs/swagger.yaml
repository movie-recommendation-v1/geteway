basePath: /
definitions:
  userservice.AdminModel:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      img_url:
        type: string
      name:
        type: string
      password:
        type: string
      role:
        type: string
      updated_at:
        type: string
    type: object
  userservice.CreateAdminReq:
    properties:
      admin_email:
        type: string
      admin_name:
        type: string
      admin_password:
        type: string
    type: object
  userservice.CreateAdminRes:
    properties:
      message:
        type: string
    type: object
  userservice.DeleteAdminReq:
    properties:
      admin_id:
        type: string
    type: object
  userservice.DeleteAdminRes:
    properties:
      message:
        type: string
    type: object
  userservice.DeleteUserReq:
    properties:
      id:
        type: string
    type: object
  userservice.DeleteUserRes:
    properties:
      message:
        type: string
    type: object
  userservice.ForgetPasswordReq:
    properties:
      admin_email:
        type: string
    type: object
  userservice.ForgetPasswordRes:
    properties:
      message:
        type: string
    type: object
  userservice.ForgotPasswordReq:
    properties:
      email:
        type: string
    type: object
  userservice.ForgotPasswordRes:
    properties:
      message:
        type: string
    type: object
  userservice.GetAdminRes:
    properties:
      admin_res:
        $ref: '#/definitions/userservice.AdminModel'
    type: object
  userservice.GetAllAdminRes:
    properties:
      admin_res:
        items:
          $ref: '#/definitions/userservice.AdminModel'
        type: array
    type: object
  userservice.GetAllUserRes:
    properties:
      UserRes:
        items:
          $ref: '#/definitions/userservice.UserModel'
        type: array
    type: object
  userservice.GetUserByIDRes:
    properties:
      UserRes:
        $ref: '#/definitions/userservice.UserModel'
    type: object
  userservice.LoginReq:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  userservice.LoginRes:
    properties:
      UserRes:
        $ref: '#/definitions/userservice.UserModel'
    type: object
  userservice.RegisterUserReq:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  userservice.RegisterUserRes:
    properties:
      message:
        type: string
    type: object
  userservice.UpdateAdminReq:
    properties:
      admin_req:
        $ref: '#/definitions/userservice.AdminModel'
    type: object
  userservice.UpdateAdminRes:
    properties:
      admin_res:
        $ref: '#/definitions/userservice.AdminModel'
    type: object
  userservice.UpdateUserReq:
    properties:
      UserReq:
        $ref: '#/definitions/userservice.UserModel'
    type: object
  userservice.UpdateUserRes:
    properties:
      UserRes:
        $ref: '#/definitions/userservice.UserModel'
    type: object
  userservice.UserModel:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      img_url:
        type: string
      name:
        type: string
      password:
        type: string
      role:
        type: string
      updated_at:
        type: string
    type: object
  userservice.VerifyUserReq:
    properties:
      email:
        type: string
      sms_code:
        type: string
    type: object
  userservice.VerifyUserRes:
    properties:
      Res:
        $ref: '#/definitions/userservice.UserModel'
    type: object
info:
  contact: {}
  description: Betayin Kino
  version: "1.0"
paths:
  /admin/{id}:
    get:
      consumes:
      - application/json
      description: Retrieves details of an admin by its ID
      parameters:
      - description: Admin ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/userservice.GetAdminRes'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get admin details by ID
      tags:
      - admin
  /admin/add:
    post:
      consumes:
      - application/json
      description: Adds a new admin with the provided details
      parameters:
      - description: Admin Add Request
        in: body
        name: createAdminReq
        required: true
        schema:
          $ref: '#/definitions/userservice.CreateAdminReq'
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/userservice.CreateAdminRes'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Add a new admin
      tags:
      - admin
  /admin/all:
    get:
      consumes:
      - application/json
      description: Retrieves a list of all admins with optional filters
      parameters:
      - description: Limit the number of results
        in: query
        name: limit
        type: integer
      - description: Offset for pagination
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved list of admins
          schema:
            $ref: '#/definitions/userservice.GetAllAdminRes'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get all admins
      tags:
      - admin
  /admin/delete:
    delete:
      consumes:
      - application/json
      description: Deletes an admin by its ID
      parameters:
      - description: Admin Delete Request
        in: body
        name: deleteAdminReq
        required: true
        schema:
          $ref: '#/definitions/userservice.DeleteAdminReq'
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/userservice.DeleteAdminRes'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete an admin
      tags:
      - admin
  /admin/forget_password:
    post:
      consumes:
      - application/json
      description: Sends a password reset link to the admin's email
      parameters:
      - description: Password Reset Request
        in: body
        name: forgetPasswordReq
        required: true
        schema:
          $ref: '#/definitions/userservice.ForgetPasswordReq'
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/userservice.ForgetPasswordRes'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Reset admin password
      tags:
      - admin
  /admin/update:
    put:
      consumes:
      - application/json
      description: Updates the details of an admin by its ID
      parameters:
      - description: Admin Update Request
        in: body
        name: updateAdminReq
        required: true
        schema:
          $ref: '#/definitions/userservice.UpdateAdminReq'
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/userservice.UpdateAdminRes'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update admin details
      tags:
      - admin
  /user/{id}:
    get:
      consumes:
      - application/json
      description: Retrieves details of a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/userservice.GetUserByIDRes'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get user details by ID
      tags:
      - user
  /user/all:
    get:
      consumes:
      - application/json
      description: Retrieves a list of all users with optional filters
      parameters:
      - description: Limit the number of results
        in: query
        name: limit
        type: integer
      - description: Offset for pagination
        in: query
        name: offset
        type: integer
      - description: User id
        in: query
        name: id
        type: string
      - description: User-name
        in: query
        name: name
        type: string
      - description: User email
        in: query
        name: email
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved list of users
          schema:
            $ref: '#/definitions/userservice.GetAllUserRes'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get all users
      tags:
      - user
  /user/delete:
    delete:
      consumes:
      - application/json
      description: Deletes a user by their ID
      parameters:
      - description: User Delete Request
        in: body
        name: deleteUserReq
        required: true
        schema:
          $ref: '#/definitions/userservice.DeleteUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/userservice.DeleteUserRes'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete a user
      tags:
      - user
  /user/forgot_password:
    post:
      consumes:
      - application/json
      description: Sends a forgot password email
      parameters:
      - description: Forgot Password Request
        in: body
        name: forgotPasswordReq
        required: true
        schema:
          $ref: '#/definitions/userservice.ForgotPasswordReq'
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/userservice.ForgotPasswordRes'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Forgot password
      tags:
      - user
  /user/login:
    post:
      consumes:
      - application/json
      description: Logins user using email and password
      parameters:
      - description: Login Request
        in: body
        name: loginReq
        required: true
        schema:
          $ref: '#/definitions/userservice.LoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/userservice.LoginRes'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Login user
      tags:
      - user
  /user/register:
    post:
      consumes:
      - application/json
      description: Registers a new user with the provided details
      parameters:
      - description: User Register Request
        in: body
        name: registerUserReq
        required: true
        schema:
          $ref: '#/definitions/userservice.RegisterUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/userservice.RegisterUserRes'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Register a new user
      tags:
      - user
  /user/update:
    put:
      consumes:
      - application/json
      description: Updates the details of a user by their ID
      parameters:
      - description: User Update Request
        in: body
        name: updateUserReq
        required: true
        schema:
          $ref: '#/definitions/userservice.UpdateUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/userservice.UpdateUserRes'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update user details
      tags:
      - user
  /user/verify-user:
    post:
      consumes:
      - application/json
      description: Verifies a user using the verification code
      parameters:
      - description: User Verification Request
        in: body
        name: verifyUserReq
        required: true
        schema:
          $ref: '#/definitions/userservice.VerifyUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/userservice.VerifyUserRes'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Verify a user
      tags:
      - user
securityDefinitions:
  BearerAuth:
    in: header
    name: Authourization
    type: apiKey
swagger: "2.0"
